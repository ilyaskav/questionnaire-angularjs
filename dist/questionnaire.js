/*! questionnaire 25-09-2017 */

"use strict";angular.module("questionnaire").controller("MainController",["$scope","$location",function(e,n){e.isActive=function(e){return e===n.path()}}]),angular.module("questionnaire").controller("QuestionnaireController",["$scope","$http",function(e,n){function t(){if(e.error=null,!e.questionnaireForm.$valid){if(e.questionnaireForm.$error.required)return e.error="Fill out all fields",!1;if(e.questionnaireForm.$error.number)return e.error="Length of sprint should be a number",!1;if("number"==typeof e.formData.codeQuality&&e.formData.codeQuality>0&&e.formData.codeQuality<=10)return e.error="Code quality should be in range 1-10",!1}return!0}e.formData={},e.error=null,e.submitted=!1,e.slider=new Slider("#codeQuality",{min:1,max:10}),e.submit=function(){if(e.submitted=!0,e.formData.codeQuality=e.slider.getValue(),t()){var a=getSprintCodeQuaility(e.formData.codeQuality,e.formData.lengthOfSprint),r=getQuestionRating(a,getKPI(e.formData.bestDev));showSprintStatus(r,"#sprintStatus"),n.post("api/submitForm",e.formData).then(function(){$(".alert-success").show(),e.formData={},e.submitted=!1},function(){$(".alert-danger").show(),console.log("Error sending the form")})}},e.clear=function(){e.submitted=!1,e.error=null}}]),angular.module("questionnaire").controller("ResultsController",["$scope","$http",function(e,n){e.answers=[],e.pagination={},e.getAnswers=function(t){n.get("api/results",{params:{page:t}}).then(function(n){n.data.answers.forEach(function(e){e.created=moment(e.created).format("MMMM Do YYYY, h:mm:ss a")}),e.answers=n.data.answers,e.pagination=n.data.pagination},function(){console.log("cannot get answers")})},e.next=function(){e.pagination.page<e.pagination.pagesTotal&&e.getAnswers(e.pagination.page+1)},e.prev=function(){e.pagination.page>1&&e.getAnswers(e.pagination.page-1)},e.getAnswers()}]),angular.module("templates-dist",["../modules/questionnaire/templates/404.error.tpl.html","../modules/questionnaire/templates/form.tpl.html","../modules/questionnaire/templates/main.tpl.html","../modules/questionnaire/templates/results.tpl.html"]),angular.module("../modules/questionnaire/templates/404.error.tpl.html",[]).run(["$templateCache",function(e){e.put("../modules/questionnaire/templates/404.error.tpl.html","<h2>404. Not Found</h2>\n<h4>Page you requested was not found on server. Maybe you made a typo?</h4>")}]),angular.module("../modules/questionnaire/templates/form.tpl.html",[]).run(["$templateCache",function(e){e.put("../modules/questionnaire/templates/form.tpl.html",'<div class="alert alert-success alert-dismissible js-submissionSuccessMessage" role="alert" style="display:none;">\n    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>    \n    Thank you for taking the time!\n</div>\n<div class="alert alert-danger alert-dismissible js-submissionErrorMessage" role="alert" style="display:none;">\n    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>\n    <strong>Error!</strong> Form was not sent. Please fill in all fields carefully and try again.\n</div>\n\n<h2>BrandPly Questionnaire</h2>\n<form id="questionnaireForm" ng-submit="submit()" name="questionnaireForm" novalidate>\n    <div class="form-group" id="sprintStatus"> </div>\n\n    <div class="form-group">\n        <label for="codeQuality">Code quality</label> <br />\n        <input id="codeQuality" type="text" name="codeQuality" data-slider-ticks="[1, 10]" data-slider-ticks-labels=\'["low", "high"]\'\n            data-slider-value="10" data-slider-tooltip="hide" ng-model="formData.codeQuality" />\n    </div>\n\n    <div class="form-group" ng-class="{ \'has-error\': questionnaireForm.bestDev.$invalid && submitted }">\n        <label for="bestDev">The best developer</label>\n        <select name="bestDev" id="bestDev" class="form-control" required ng-model="formData.bestDev">\n            <option value="" selected>Select dev</option>\n            <option value="Eugene Novikov">Eugene Novikov</option>\n            <option value="Nikita Evdokimenko">Nikita Evdokimenko</option>\n        </select>\n    </div>\n\n    <div class="form-group" ng-class="{ \'has-error\': questionnaireForm.suggestions.$invalid && submitted }">\n        <label for="suggestions">Suggestions</label>\n        <textarea name="suggestions" id="suggestions" class="form-control" rows="3" required ng-model="formData.suggestions"></textarea>\n    </div>\n\n    <div class="form-group" ng-class="{ \'has-error\': questionnaireForm.lengthOfSprint.$invalid && submitted }">\n        <label for="lengthOfSprint"> Length of sprint </label>\n        <input type="number" name="lengthOfSprint" id="lengthOfSprint" class="form-control" required ng-model="formData.lengthOfSprint" />\n    </div>\n\n    <div class="form-group" ng-class="{ \'has-error\': questionnaireForm.name.$invalid && submitted }">\n        <label for="name">Your name </label>\n        <input type="text" name="name" id="name" class="form-control" required ng-model="formData.name" />\n    </div>\n\n    <p class="text-warning"><strong>All fields are required.</strong></p>\n\n    <div class="form-group">\n        <button type="submit" class="btn btn-primary">Send</button>\n        <button type="reset" class="btn btn-default" ng-click="clear()"> Clear</button>\n    </div>\n\n    <div data-ng-show="error" class="text-center text-danger error">\n        <strong data-ng-bind="error"></strong>\n    </div>\n</form>')}]),angular.module("../modules/questionnaire/templates/main.tpl.html",[]).run(["$templateCache",function(e){e.put("../modules/questionnaire/templates/main.tpl.html",'<h1>Brandply questionnaire</h1>\n<p class="lead">Provide feedback to your team so they could improve workflow and understand you better.<br> It won\'t take long.</p>\n<p>\n    <a class="btn btn-primary" href="/form">Answer the questions</a>\n    <a class="btn btn-default" href="/results">View result</a>\n</p>')}]),angular.module("../modules/questionnaire/templates/results.tpl.html",[]).run(["$templateCache",function(e){e.put("../modules/questionnaire/templates/results.tpl.html",'<h2>BrandPly Questionnaire results</h2>\n\n<p class="bg-warning" ng-hide="answers.length">No questionnaire answers yet.</p>\n\n<div class="answer" ng-repeat="answer in answers" >\n    <span>Reply by <em> {{answer.name}} </em> on  {{ answer.created }}:</span>\n    <div class="well">\n\n        <dl class="dl-horizontal">\n            <dt>Code Quality</dt>\n            <dd> {{answer.codeQuality}} </dd>\n\n            <dt>Best Developer</dt>\n            <dd> {{answer.bestDev}} </dd>\n\n            <dt>Suggestions</dt>\n            <dd> {{answer.suggestions}} </dd>\n\n            <dt>Length of sprint</dt>\n            <dd> {{answer.lengthOfSprint}} </dd>\n        </dl>\n    </div>\n</div>\n\n<nav aria-label="Page navigation" ng-show="answers.length">\n    <span class="pagination">Showing {{ pagination.from }} to {{ pagination.to }} of {{ pagination.total }}</span>\n    <ul class="pagination pull-right">\n        <li ng-class="{ disabled: pagination.page === 1}">\n            <a href="#" aria-label="Previous" ng-click="prev()">\n                <span aria-hidden="true">&laquo;</span>\n            </a>\n        </li>\n        <li ng-class="{ \'active\': pagination.page === ($index + 1) }" ng-repeat="page in pagination.pages">\n            <a href="#" ng-click="getAnswers($index + 1)" >{{ $index + 1 }}</a></li>\n        <li ng-class="{ disabled: pagination.pagesTotal === pagination.page }">\n            <a href="#" aria-label="Next" ng-click="next()">\n                <span aria-hidden="true">&raquo;</span>\n            </a>\n        </li>\n    </ul>\n</nav>')}]);